#if !defined(AFX_MEDIAPLAYERDVD_H__7346367C_38EC_46AD_8759_B0D2C8984A64__INCLUDED_)
#define AFX_MEDIAPLAYERDVD_H__7346367C_38EC_46AD_8759_B0D2C8984A64__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CMediaPlayerDvd wrapper class

class CMediaPlayerDvd : public COleDispatchDriver
{
public:
	CMediaPlayerDvd() {}		// Calls COleDispatchDriver default constructor
	CMediaPlayerDvd(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CMediaPlayerDvd(const CMediaPlayerDvd& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	void ButtonSelectAndActivate(unsigned long uiButton);
	void UpperButtonSelect();
	void LowerButtonSelect();
	void LeftButtonSelect();
	void RightButtonSelect();
	void ButtonActivate();
	void ForwardScan(double dwSpeed);
	void BackwardScan(double dwSpeed);
	void PrevPGSearch();
	void TopPGSearch();
	void NextPGSearch();
	void TitlePlay(unsigned long uiTitle);
	void ChapterPlay(unsigned long uiTitle, unsigned long uiChapter);
	void ChapterSearch(unsigned long Chapter);
	void MenuCall(long MenuID);
	void ResumeFromMenu();
	void TimePlay(unsigned long uiTitle, LPCTSTR bstrTime);
	void TimeSearch(LPCTSTR bstrTime);
	void ChapterPlayAutoStop(unsigned long ulTitle, unsigned long ulChapter, unsigned long ulChaptersToPlay);
	void StillOff();
	void GoUp();
	CString GetTotalTitleTime();
	unsigned long GetNumberOfChapters(unsigned long ulTitle);
	CString GetAudioLanguage(unsigned long ulStream);
	CString GetSubpictureLanguage(unsigned long ulStream);
	VARIANT GetAllGPRMs();
	VARIANT GetAllSPRMs();
	BOOL UOPValid(unsigned long ulUOP);
	unsigned long GetButtonsAvailable();
	unsigned long GetCurrentButton();
	unsigned long GetAudioStreamsAvailable();
	unsigned long GetCurrentAudioStream();
	void SetCurrentAudioStream(unsigned long newValue);
	unsigned long GetCurrentSubpictureStream();
	void SetCurrentSubpictureStream(unsigned long newValue);
	unsigned long GetSubpictureStreamsAvailable();
	BOOL GetSubpictureOn();
	void SetSubpictureOn(BOOL bNewValue);
	unsigned long GetAnglesAvailable();
	unsigned long GetCurrentAngle();
	void SetCurrentAngle(unsigned long newValue);
	unsigned long GetCurrentTitle();
	unsigned long GetCurrentChapter();
	CString GetCurrentTime();
	void SetRoot(LPCTSTR lpszNewValue);
	CString GetRoot();
	unsigned long GetFramesPerSecond();
	unsigned long GetCurrentDomain();
	unsigned long GetTitlesAvailable();
	unsigned long GetVolumesAvailable();
	unsigned long GetCurrentVolume();
	unsigned long GetCurrentDiscSide();
	BOOL GetCCActive();
	void SetCCActive(BOOL bNewValue);
	unsigned long GetCurrentCCService();
	void SetCurrentCCService(unsigned long newValue);
	CString GetUniqueID();
	unsigned long GetColorKey();
	void SetColorKey(unsigned long newValue);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_MEDIAPLAYERDVD_H__7346367C_38EC_46AD_8759_B0D2C8984A64__INCLUDED_)
